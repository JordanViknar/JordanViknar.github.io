{"mappings":"C,A,e,EGAY,EAOL,SAAS,EAAqB,CAA8B,CAAE,CAAa,EACjF,IAAI,EAA8B,KAClC,OAAQ,GACP,KAAA,EACC,EAAU,SAAS,cAAc,CAAC,GAClC,KACD,MAAA,EACC,EAAU,SAAS,sBAAsB,CAAC,EAAM,CAAC,EAAE,CACnD,KACD,MAAA,EACC,EAAU,SAAS,oBAAoB,CAAC,EAAM,CAAC,EAAE,CACjD,KACD,MAAA,EACC,EAAU,SAAS,aAAa,CAAC,EAEnC,CACA,GAAI,AAAY,OAAZ,EAAkB,MAAM,AAAI,MAAM,CAAC,mBAAmB,EAAE,EAAM,CAAC,EACnE,OAAO,CACR,C,CAzBY,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA,E,C,E,E,C,E,C,K,C,C,E,K,C,E,C,Q,C,C,E,G,C,E,C,M,C,C,E,Q,C,E,C,WDGZ,IAAM,EAAsB,AAAA,EAAqB,AAAA,EAAyB,EAAE,CAAE,uBAE9E,SAAS,IACR,IAAM,EAAO,IAAI,KACjB,EAAK,QAAQ,CAAC,EAAK,QAAQ,IAC3B,EAAoB,SAAS,CAAG,EAAK,kBAAkB,CAAC,QAAS,CAAE,KAAM,UAAW,OAAQ,SAAU,EACvG,CACA,YAAY,KAAO,GAAS,EAAG,KAC/B,IAGA,IAAM,EAAuB,AAAA,EAAqB,AAAA,EAAyB,EAAE,CAAE,yBDX/E,ACgBO,SAAwB,CAAiB,EAC/C,IAAM,EAAc,SAAS,aAAa,CAAC,IAC3C,CAAA,EAAY,IAAI,CAAG,EAAK,IAAI,CAC5B,EAAY,MAAM,CAAG,SACrB,EAAY,SAAS,CAAG,CAAC,UAAU,EAAE,EAAK,IAAI,CAAC,OAAO,EAAE,EAAK,IAAI,CAAC,EAAE,CAAC,CACrE,EAAY,KAAK,CAAG,EAAK,IAAI,CAC7B,EAAqB,WAAW,CAAC,EAClC,EDvBe,ICaR,M,I,A,C,I,A,C,I,AACN,aAAmB,CAAY,CAAS,CAAY,CAAS,CAAkB,CAAE,CAA9D,IAAA,CAAA,IAAA,CAAA,EAAqB,IAAA,CAAA,IAAA,CAAA,EAAqB,IAAA,CAAA,IAAA,CAAA,CAAqB,CACnF,EDf+B,oBAAqB,yDAA0D,sD","sources":["<anon>","assets/scripts/ui/loader.ts","assets/scripts/ui/taskbar/taskbar.ts","assets/scripts/utilities.ts"],"sourcesContent":["(function () {\n// Taskbar icons\nvar $8dabf3875e4acf4b$export$44a4435200794ca;\n(function(HTMLElementRetrievalType) {\n    HTMLElementRetrievalType[HTMLElementRetrievalType[\"ID\"] = 0] = \"ID\";\n    HTMLElementRetrievalType[HTMLElementRetrievalType[\"CLASS\"] = 1] = \"CLASS\";\n    HTMLElementRetrievalType[HTMLElementRetrievalType[\"TAG\"] = 2] = \"TAG\";\n    HTMLElementRetrievalType[HTMLElementRetrievalType[\"SELECTOR\"] = 3] = \"SELECTOR\";\n})($8dabf3875e4acf4b$export$44a4435200794ca || ($8dabf3875e4acf4b$export$44a4435200794ca = {}));\nfunction $8dabf3875e4acf4b$export$e83a6a0d9ebec2a5(type, value) {\n    let element = null;\n    switch(type){\n        case 0:\n            element = document.getElementById(value);\n            break;\n        case 1:\n            element = document.getElementsByClassName(value)[0];\n            break;\n        case 2:\n            element = document.getElementsByTagName(value)[0];\n            break;\n        case 3:\n            element = document.querySelector(value);\n            break;\n    }\n    if (element === null) throw new Error(`Element not found: ${value}`);\n    return element;\n}\n\n\n// -- Time in status bar\nconst $bf8c97ced26782e8$var$taskbar_status_time = (0, $8dabf3875e4acf4b$export$e83a6a0d9ebec2a5)((0, $8dabf3875e4acf4b$export$44a4435200794ca).ID, \"taskbar-status-time\");\nfunction $bf8c97ced26782e8$var$setTime() {\n    const time = new Date();\n    time.setHours(time.getHours());\n    $bf8c97ced26782e8$var$taskbar_status_time.innerText = time.toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"numeric\"\n    });\n}\nsetInterval(()=>{\n    $bf8c97ced26782e8$var$setTime();\n}, 1000);\n$bf8c97ced26782e8$var$setTime();\n// -- Icons in taskbar\nconst $bf8c97ced26782e8$var$taskbar_status_icons = (0, $8dabf3875e4acf4b$export$e83a6a0d9ebec2a5)((0, $8dabf3875e4acf4b$export$44a4435200794ca).ID, \"taskbar-status-icons\");\nclass $bf8c97ced26782e8$export$52fb830630653be4 {\n    name;\n    link;\n    icon;\n    constructor(name, link, icon){\n        this.name = name;\n        this.link = link;\n        this.icon = icon;\n    }\n}\nfunction $bf8c97ced26782e8$export$6ce84124628a68c0(icon) {\n    const iconElement = document.createElement(\"a\");\n    iconElement.href = icon.link;\n    iconElement.target = \"_blank\";\n    iconElement.innerHTML = `<img src=\"${icon.icon}\" alt=\"${icon.name}\">`;\n    iconElement.title = icon.name;\n    $bf8c97ced26782e8$var$taskbar_status_icons.appendChild(iconElement);\n}\n\n\n(0, $bf8c97ced26782e8$export$6ce84124628a68c0)(new (0, $bf8c97ced26782e8$export$52fb830630653be4)(\"GitHub Repository\", \"https://github.com/JordanViknar/JordanViknar.github.io\", \"https://www.cdnlogo.com/logos/g/69/github-icon.svg\"));\n\n})();\n//# sourceMappingURL=index.cdefdcf8.js.map\n","// Taskbar icons\nimport { addTaskbarIcon, TaskbarIcon } from './taskbar/taskbar';\n\naddTaskbarIcon(new TaskbarIcon(\"GitHub Repository\", \"https://github.com/JordanViknar/JordanViknar.github.io\", \"https://www.cdnlogo.com/logos/g/69/github-icon.svg\"));","import { getSingleHTMLElement, HTMLElementRetrievalType } from '../../utilities';\n\n// -- Time in status bar\nconst taskbar_status_time = getSingleHTMLElement(HTMLElementRetrievalType.ID, 'taskbar-status-time');\n\nfunction setTime() {\n\tconst time = new Date();\n\ttime.setHours(time.getHours());\n\ttaskbar_status_time.innerText = time.toLocaleTimeString('en-US', { hour: 'numeric', minute: 'numeric' });\n}\nsetInterval(() => {setTime()}, 1000)\nsetTime();\n\n// -- Icons in taskbar\nconst taskbar_status_icons = getSingleHTMLElement(HTMLElementRetrievalType.ID, 'taskbar-status-icons');\n\nexport class TaskbarIcon {\n\tconstructor(public name: string, public link: string, public icon: URL | String) {}\n}\nexport function addTaskbarIcon(icon: TaskbarIcon) {\n\tconst iconElement = document.createElement('a');\n\ticonElement.href = icon.link;\n\ticonElement.target = \"_blank\";\n\ticonElement.innerHTML = `<img src=\"${icon.icon}\" alt=\"${icon.name}\">`;\n\ticonElement.title = icon.name;\n\ttaskbar_status_icons.appendChild(iconElement);\n}\n","export enum HTMLElementRetrievalType {\n\tID,\n\tCLASS,\n\tTAG,\n\tSELECTOR\n}\n\nexport function getSingleHTMLElement(type: HTMLElementRetrievalType, value: string): HTMLElement {\n\tlet element: HTMLElement | null = null;\n\tswitch (type) {\n\t\tcase HTMLElementRetrievalType.ID:\n\t\t\telement = document.getElementById(value);\n\t\t\tbreak;\n\t\tcase HTMLElementRetrievalType.CLASS:\n\t\t\telement = document.getElementsByClassName(value)[0] as HTMLElement;\n\t\t\tbreak;\n\t\tcase HTMLElementRetrievalType.TAG:\n\t\t\telement = document.getElementsByTagName(value)[0] as HTMLElement;\n\t\t\tbreak;\n\t\tcase HTMLElementRetrievalType.SELECTOR:\n\t\t\telement = document.querySelector(value) as HTMLElement;\n\t\t\tbreak;\n\t};\n\tif (element === null) throw new Error(`Element not found: ${value}`);\n\treturn element;\n}\n"],"names":["$8dabf3875e4acf4b$export$44a4435200794ca","HTMLElementRetrievalType","$8dabf3875e4acf4b$export$e83a6a0d9ebec2a5","type","value","element","document","getElementById","getElementsByClassName","getElementsByTagName","querySelector","Error","$bf8c97ced26782e8$var$taskbar_status_time","ID","$bf8c97ced26782e8$var$setTime","time","Date","setHours","getHours","innerText","toLocaleTimeString","hour","minute","setInterval","$bf8c97ced26782e8$var$taskbar_status_icons","icon","iconElement","createElement","href","link","target","innerHTML","name","title","appendChild","constructor"],"version":3,"file":"index.cdefdcf8.js.map"}